@page "/register"
@using System.ComponentModel.DataAnnotations
@using Keepi.Client.Repositories.Interfaces
@inject HttpClient Http
@inject IRegisterRepository registerRepository
@using Keepi.Shared
@inject IJSRuntime JS
@inject NavigationManager NavManager

<style>
    .input {
        width: 400px;
        height: 60px;
        border-radius: 10px;
        margin-top: 20px;
        border: solid gray 2px;
        font-size: 20px;
    }

    .header {
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        text-align: center;
        margin-bottom: 20px;
    }

    .registerBtn {
        width: 400px;
        height: 50px;
        border-radius: 10px;
        font-size: 20px;
        font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;
        background: #8FCCBA;
        border: none;
        margin-top: 20px;
        margin-bottom: 20px;
    }

        .registerBtn:active {
            background: #DBF5EA;
        }
</style>


<table style="margin-left: auto; margin-right: auto;">
    <tr>
        <h1 class="header">Register</h1>
    </tr>
    <tr>
        <input class="input" type="text" id="userName" name="userName" @bind="Username" placeholder="User Name" required>
    </tr>
    <tr>
        <input class="input" type="text" id="firstName" name="firstName" @bind="FirstName" placeholder="First Name" required>
    </tr>
    <tr>
        <input class="input" type="text" id="lastName" name="lastName" @bind="LastName" placeholder="Last Name" required>
    </tr>
    <tr>
        <input class="input" type="password" id="password" name="password" @bind="Password" placeholder="Password" required>
    </tr>
    <tr>
        <input class="input" type="email" id="email" name="email" @bind="Email" placeholder="Email" required>
    </tr>
    <tr>
        <input class="input" type="text" id="city" name="city" @bind="City" placeholder="City" required>
    </tr>
    <tr>
        <input class="input" type="text" id="phone" name="phone" @bind="PhoneNumber" placeholder="Phone Number" required>
    </tr>
    <tr>
        <button class="registerBtn" @onclick=Register>REGISTER</button>
    </tr>
</table>


@code {
    public string Username { get; set; }
    public string FirstName { get; set; }
    public string LastName { get; set; }
    public string Password { get; set; }
    [EmailAddress]
    public string Email { get; set; }
    public string City { get; set; }
    [Phone]
    public string PhoneNumber { get; set; }
    
    private async Task Register()
    {
        if (string.IsNullOrEmpty(Username) || string.IsNullOrEmpty(FirstName) || string.IsNullOrEmpty(LastName) || string.IsNullOrEmpty(Password) || string.IsNullOrEmpty(Email) || string.IsNullOrEmpty(City) || string.IsNullOrEmpty(PhoneNumber))
        {
            await JS.InvokeAsync<object>("alert", "Please fill in all the fields");
            return;
        }

        List<User> response = await registerRepository.Register(Username, FirstName, LastName, Password, Email, City, PhoneNumber);
        if (response == null)
        {
            await JS.InvokeAsync<object>("alert", "An errr occured while registration");
        }
        else if (response.Count == 0)
        {
            await JS.InvokeAsync<object>("alert", "A user with the same username or email is already exists");
        }
        else
        {
            await JS.InvokeVoidAsync("localStorageHelper.save", "user", response[0]);
            NavManager.NavigateTo("home");
        }
    }

    public class RegistrationModel
    {
        [Required]
        public string Username { get; set; }
        [Required]
        public string FirstName { get; set; }
        [Required]
        public string LastName { get; set; }
        [Required]
        public string Password { get; set; }
        [Required]
        [EmailAddress]
        public string Email { get; set; }
        [Required]
        public string City { get; set; }
        [Required]
        [Phone]
        public string PhoneNumber { get; set; }
    }
}
