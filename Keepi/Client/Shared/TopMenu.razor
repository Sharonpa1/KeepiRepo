@inject IJSRuntime JS
@inject NavigationManager NavManager

<style>
    .nav_btn {
        border: 0px;
        background: transparent;
        border-radius: 50%;
        height: 35px;
        width: 35px;
        align-content: center;
        margin-left: 15px;
    }

        .nav_btn:hover {
            background: lightgray;
        }

        .nav_btn:active {
            background: gray;
        }

    .btn_img {
        width: 25px;
        height: 25px;
        margin-left: auto;
        margin-right: auto;
    }
</style>


<button class="nav_btn" @onclick="ProfileBtn">
    <image class="btn_img" src="/Resources/Images/user.png"></image>
</button>

<button class="nav_btn" @onclick="HomeBtn">
    <image class="btn_img" src="/Resources/Images/home.png"></image>
</button>

<button class="nav_btn" @onclick="NotificationsBtn">
    <image class="btn_img" src="/Resources/Images/bell.png"></image>
</button>

<button class="nav_btn" @onclick="SearchBtn">
    <image class="btn_img" src="/Resources/Images/search.png"></image>
</button>

<button class="nav_btn" @onclick="ChatBtn">
    <image class="btn_img" src="/Resources/Images/chat.png"></image>
</button>

<button class="nav_btn" @onclick="LogoutBtn">
    <image class="btn_img" src="/Resources/Images/logout.png"></image>
</button>


@code {

    private void ProfileBtn()
    {
        NavManager.NavigateTo("/profile");
    }

    private void HomeBtn()
    {
        NavManager.NavigateTo("/home");
    }

    private void NotificationsBtn()
    {
        NavManager.NavigateTo("/notifications");
    }

    private void SearchBtn()
    {
        NavManager.NavigateTo("/searchProfile");
    }

    private void ChatBtn()
    {
        NavManager.NavigateTo("/chat");
    }

    private async Task LogoutBtn()
    {
        bool confirmed = await JS.InvokeAsync<bool>("confirm", "Are you sure you want to logout?");

        if (confirmed)
        {
            await JS.InvokeVoidAsync("localStorageHelper.remove", "user");
            NavManager.NavigateTo("/");
        }

    }
}
