@using Keepi.Client.Repositories.Interfaces
@using Keepi.Shared
@inject IPostRepository postRepository
@inject IJSRuntime JS
@inject NavigationManager NavManager


@if (postsList == null || user == null)
{
    <h6>Loading...</h6>
}
else if (postsList.Count == 0)
{
    <h6>There are no posts to display...</h6>
}
else
{
    foreach (var post in postsList)
    {
        <div style="border: none; box-shadow: 0 4px 8px 0 rgba(0, 0, 0, 0.2), 0 6px 20px 0 rgba(0, 0, 0, 0.19); border-radius:10px; margin-bottom: 10px; width: 500px; height: auto;">
            <table style="width: 100%">
                @if (isEditing && post.Id == editingPostId)
                {
                    <NewPostComponent isEditMode="true" postToEdit="@post" />
                }
                else
                {
                    <tr>
                        <table style="border-bottom: none; width: 100%; background: #EAEAEA; border-top-left-radius: 10px; border-top-right-radius: 10px;">
                            <tr>
                                <td style="width: 10%">
                                    <image style="width: 15px; height: 15px; margin-left: 10px;" src="/Resources/Images/user.png"></image>
                                    @* <image style="width: 15px; height: 15px;" src="@post.User.ProfilePhoto"></image> *@
                                </td>
                                <td style="font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">@post.User.Username</td>
                                @if (post.UserId == user.Id)
                                {
                                    <td style="width: 10%">
                                        <button style="width: 20px; height: 20px; background:none; border: none; align-content:center;" @onclick="()=>EditPost(post.Id)">
                                            <image style="width: 15px; height: 15px;" src="/Resources/Images/editIcon.png"></image>
                                        </button>
                                    </td>
                                    <td style="width: 10%">
                                        <button style="width: 20px; height: 20px; background:none; border: none; align-content:center;" @onclick="()=>DeletePost(post.Id)">
                                            <image style="width: 15px; height: 15px;" src="/Resources/Images/deleteIcon.png"></image>
                                        </button>
                                    </td>
                                }
                                @if (post.UserId != user.Id)
                                {
                                    <td style="width: 10%">

                                        <button style="width: 20px; height: 20px; background:none; border: none; align-content:center;" @onclick="()=>SavePostToUserCollection(post.Id)">
                                            <image style="width: 15px; height: 15px;" src="/Resources/Images/unsaved.png"></image>
                                        </button>
                                        @* <button style="width: 20px; height: 20px; background:none; border: none; align-content:center;" @onclick="()=>UnsavePostFromUserCollection(post.Id)">
                        <image style="width: 15px; height: 15px;" src="/Resources/Images/saved.png"></image>
                        </button> *@
                                    </td>
                                }
                            </tr>
                        </table>
                    </tr>
                    <tr align="center" style="font-family: 'Franklin Gothic Medium', 'Arial Narrow', Arial, sans-serif;">@post.Category</tr>
                    <tr>
                        <td style="width:100%;">
                            <p style="margin-left: 10px; margin-right: 10px;">@post.Text</p>
                        </td>
                    </tr>

                    <tr align="right">
                        <p style="margin-right: 10px;">@post.Date.ToShortDateString()</p>
                    </tr>


                }
            </table>
        </div>

    }
}

@code {
    [Parameter] public List<Post> postsList { get; set; }
    User user;
    private bool isEditing = false;
    private Guid editingPostId;

    protected override async Task OnInitializedAsync()
    {
        user = await JS.InvokeAsync<User>("localStorageHelper.get", "user");
    }

    private async Task DeletePost(Guid postId)
    {
        bool confirmed = await JS.InvokeAsync<bool>("confirm", "Are you sure you want to delete this post?"); // Confirm

        if (confirmed)
        {
            var response = await postRepository.DeletePost(postId);

            if (response != null && response.Count > 0)
            {
                if (response[0])
                    NavManager.NavigateTo(NavManager.Uri, forceLoad: true);
            }
            else
            {
                //TODO failed to delete...
            }
        }
    }

    private void EditPost(Guid postId)
    {
        isEditing = true;
        editingPostId = postId;
    }

    private async Task SavePostToUserCollection(Guid postId)
    {

        var response = await postRepository.SavePostToUserCollection(user.Id, postId);
        NavManager.NavigateTo(NavManager.Uri, forceLoad: true);

        // if (response != null && response.Count > 0)
        // {
        //     if (response[0])
        //         NavManager.NavigateTo(NavManager.Uri, forceLoad: true);
        // }
        // else
        // {
        //     //TODO failed to delete...
        // }

    }

    private async Task UnsavePostFromUserCollection(Guid postId)
    {

        var response = await postRepository.UnsavePostFromUserCollection(user.Id, postId);
        NavManager.NavigateTo(NavManager.Uri, forceLoad: true);

    }

}